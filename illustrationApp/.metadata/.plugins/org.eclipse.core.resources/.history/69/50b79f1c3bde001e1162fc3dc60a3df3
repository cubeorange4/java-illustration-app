package com.example.illustrationApp.service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.UUID;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.example.illustrationApp.entity.Illustration;
import com.example.illustrationApp.entity.User;
import com.example.illustrationApp.form.IllustrationRegisterForm;
import com.example.illustrationApp.repository.IllustrationRepository;

@Service
public class IllustrationService {
	public final IllustrationRepository illustrationRepository;
	
	public IllustrationService(IllustrationRepository illustrationRepository) {
		this.illustrationRepository = illustrationRepository;
	}
	
	@Transactional
	public void create (IllustrationRegisterForm illustrationRegisterForm, User user) {
		Illustration illustration = new Illustration();
		MultipartFile imageFile = illustrationRegisterForm.getImageFile();
		
		LocalDate localStartDate = LocalDate.parse(illustrationRegisterForm.getStartDate(), DateTimeFormatter.ofPattern("MM:dd"));
		
		Date StartDate = Date.valueOf(localStartDate);
		
		if (!imageFile.isEmpty()) {
			String imageName = imageFile.getOriginalFilename();
			String hashedImageName = generateNewFileName(imageName);
			Path filePath = Paths.get("src/main/resources/static/storage/" + hashedImageName);
			copyImageFile(imageFile, filePath);
			illustration.setImageName(hashedImageName);
		}
		
		illustration.setName(illustrationRegisterForm.getName());
		illustration.setDescription(illustrationRegisterForm.getDescription());
		illustration.setStartDate(StartDate);
		
		illustrationRepository.save(illustration);
	}
	
	public String generateNewFileName(String fileName) {
		String[] fileNames = fileName.split("\\.");
		for (int i = 0; i < fileNames.length - 1; i++) {
			fileNames[i] = UUID.randomUUID().toString();
		}
		String hashedFileName = String.join(".", fileNames);
		return hashedFileName;
	}
	
	public void copyImageFile(MultipartFile imageFile, Path filePath) {
		try {
			Files.copy(imageFile.getInputStream(), filePath);
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
}
